---
import type { validateContactForm } from './utils';
import { SENT_STATUS_SEARCH_PARAMETER } from './consts';

export type Props = {
  validationResult: ReturnType<typeof validateContactForm> | undefined;
};

const { validationResult } = Astro.props;

const sentStatus = Astro.url.searchParams.get(SENT_STATUS_SEARCH_PARAMETER);
---

{/* TODO Add e2e tests */}
<form method="post">
  {
    sentStatus !== null && (
      <div>
        {sentStatus === '1' ? (
          <p>Thank you for contacting me, I will respond as soon as possible!</p>
        ) : (
          <>
            <p>Unfortunately there was some unexpected error.</p>
            <p>
              Im working on it, but in a mean time please try to use other forms of contact, sorry for inconvienence!
            </p>
          </>
        )}
      </div>
    )
  }
  <div class="form-row">
    <label for="contact-form-name">Name:</label>
    <input
      type="text"
      id="contact-form-name"
      name="name"
      value={validationResult?.values.name}
      minlength="2"
      required
    />
    {validationResult?.errors?.name && <p>{validationResult?.errors?.name}</p>}
  </div>

  <div class="form-row">
    <label for="contact-form-email">Email:</label>
    <input type="email" id="contact-form-email" name="email" value={validationResult?.values.email} required />
    {validationResult?.errors?.email && <p>{validationResult?.errors?.email}</p>}
  </div>

  <div class="form-row">
    <label for="contact-form-message">Message:</label>
    <textarea
      id="contact-form-message"
      name="message"
      minlength="10"
      set:html={validationResult?.values.message}
      required
    />
    {validationResult?.errors?.message && <p>{validationResult?.errors?.message}</p>}
  </div>

  <div class="form-row">
    <button type="submit">Send</button>
  </div>
</form>

<style>
  form {
    & .form-row {
      margin: 0 0 1rem;

      & label {
        display: block;
        margin: 0 0 0.5rem;
      }

      & input,
      & textarea {
        display: block;
        padding: 0.7rem;
        border-radius: 8px;
        border: 1px solid #555;
      }

      & textarea {
        resize: none;
      }
    }
  }
</style>
